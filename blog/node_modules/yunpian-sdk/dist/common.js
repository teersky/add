'use strict';

exports.__esModule = true;
exports.BASE = undefined;

var _keys = require('babel-runtime/core-js/object/keys');

var _keys2 = _interopRequireDefault(_keys);

var _promise = require('babel-runtime/core-js/promise');

var _promise2 = _interopRequireDefault(_promise);

var _assign = require('babel-runtime/core-js/object/assign');

var _assign2 = _interopRequireDefault(_assign);

var _classCallCheck2 = require('babel-runtime/helpers/classCallCheck');

var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

var _debug = require('debug');

var _debug2 = _interopRequireDefault(_debug);

var _request = require('request');

var _request2 = _interopRequireDefault(_request);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var DEFAULTS = {
  apikey: ''
};

var BASE = exports.BASE = function BASE(options) {
  (0, _classCallCheck3.default)(this, BASE);

  BASE.options = (0, _assign2.default)({}, DEFAULTS, options);
};

/**
 * getDefer
 * @return {object} deferred
 */


var getDefer = exports.getDefer = function () {
  var deferred = {};
  deferred.promise = new _promise2.default(function (resolve, reject) {
    deferred.resolve = resolve;
    deferred.reject = reject;
  });
  return deferred;
};

var escaper = function escaper(str) {
  return encodeURIComponent(str).replace(/\*/g, '%2A').replace(/'/g, '%27').replace(/\(/g, '%28').replace(/\)/g, '%29').replace(/\+/, '%2b');
};

exports.sendRequest = function (host) {
  var params = arguments.length <= 1 || arguments[1] === undefined ? {} : arguments[1];

  var _ref = arguments.length <= 2 || arguments[2] === undefined ? {} : arguments[2];

  var _ref$method = _ref.method;
  var method = _ref$method === undefined ? 'get' : _ref$method;
  var _ref$timeout = _ref.timeout;
  var timeout = _ref$timeout === undefined ? 5000 : _ref$timeout;

  var deferred = getDefer();
  if (method === 'get') {
    var query = (0, _keys2.default)(params).sort().map(function (key) {
      return escaper(key) + '=' + escaper(params[key]);
    }).join('&');
    var url = host + '?' + query;
    (0, _debug2.default)('yunpian:common:url')(url);
    _request2.default.get(url, { timeout: parseInt(timeout, 10) }, function (err, res) {
      if (err) {
        deferred.reject(err);
      }
      deferred.resolve(JSON.parse(res.body));
    });
  } else {
    (0, _debug2.default)('yunpian:common:params')(params);
    (0, _request2.default)({
      method: method.toUpperCase(),
      url: host,
      headers: [{
        name: 'content-type',
        value: 'application/x-www-form-urlencoded'
      }],
      timeout: parseInt(timeout, 10),
      form: params
    }, function (err, res) {
      if (err) {
        deferred.reject(err);
      }
      deferred.resolve(JSON.parse(res.body));
    });
  }
  return deferred.promise;
};